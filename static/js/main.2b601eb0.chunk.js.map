{"version":3,"sources":["components/Calculadora.js","App.js","reportWebVitals.js","index.js"],"names":["Calculadora","useState","clear","setClear","currentAltura","setCurrentAltura","currentPeso","setCurrentPeso","currentBsa","setCurrentBsa","currentDosis","setCurrentDosis","currentViales","setCurrentViales","useEffect","document","querySelector","value","console","log","className","type","id","placeholder","onClick","e","preventDefault","alturaParcial","Math","pow","pesoParcial","superficie","round","dosis","parseFloat","toFixed","reset","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAmFeA,MAjFf,WACE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,GAAjD,mBAAKG,EAAL,KAAoBC,EAApB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAKK,EAAL,KAAkBC,EAAlB,KACD,EAAkCN,mBAAS,GAA3C,mBAAKO,EAAL,KAAiBC,EAAjB,KACA,EAAkCR,mBAAS,GAA3C,mBAAIS,EAAJ,KAAiBC,EAAjB,KACA,EAAoCV,mBAAS,GAA7C,mBAAIW,EAAJ,KAAkBC,EAAlB,KA0CC,OAxCAC,qBAAU,WACRC,SAASC,cAAc,WAAWC,MAAQ,MACzC,IAEHH,qBAAU,WACJZ,IAAOa,SAASC,cAAc,WAAWC,MAAQ,QAuBvDC,QAAQC,IAAIb,GACZY,QAAQC,IAAIf,GAYV,sBAAKgB,UAAU,cAAf,UACE,uBACA,iCACE,sBAAKA,UAAU,aAAf,UACE,8CACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,YAAY,yBAE7C,uBACA,sBAAKH,UAAU,aAAf,UACE,4CACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,YAAY,uBAE3C,uBAEA,wBAAQC,QAhDE,SAACC,GACfA,EAAEC,iBACExB,GAAOC,GAAS,GACpB,IAAIC,EAAgBW,SAASC,cAAc,WAAWC,MAClDX,EAAcS,SAASC,cAAc,SAASC,MAE9CU,EAAgBC,KAAKC,IAAIzB,EAAe,MACxC0B,EAAcF,KAAKC,IAAIvB,EAAa,MAEpCyB,EAAaH,KAAKI,MAAML,EAAgBG,EAJ5B,OAIqD,IACrErB,EAAcsB,GACdb,QAAQC,IAAIY,GAEb,IAAIE,EAAOC,WAAsB,IAAXH,GACtBpB,EAAgBsB,EAAME,QAAQ,IAE9BjB,QAAQC,IAAIc,EAAME,QAAQ,IAE1BtB,EADoB,EAANoB,EAAQ,IA+BjB,sBAEA,wBAAQT,QA1BA,SAACC,GACbA,EAAEC,iBACFX,SAASC,cAAc,QAAQoB,QAC/BjC,GAAS,GACTE,EAAiB,GACjBE,EAAe,GACfI,EAAgB,GAChBE,EAAiB,IAmBb,qBAEA,uBACA,iEACA,uBAAOQ,KAAK,OAAOD,UAAU,SAASH,MAAOT,EAAY6B,UAAQ,IACjE,uBACA,2CACA,uBAAOhB,KAAK,OAAOD,UAAU,SAASH,MAAOP,EAAc2B,UAAQ,IACnE,uBACA,4CACA,uBAAOhB,KAAK,OAAOD,UAAU,SAASH,MAAOL,EAAeyB,UAAQ,WC/D7DC,MAVf,WAGE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCGSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,SAM1BZ,K","file":"static/js/main.2b601eb0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction Calculadora() {\n  const [clear, setClear] = useState(false);\n  let [currentAltura, setCurrentAltura] = useState(0);\n  let [currentPeso, setCurrentPeso] = useState(0);\n let [currentBsa, setCurrentBsa] = useState(0);\n let[currentDosis,setCurrentDosis]=useState(0);\n let[currentViales,setCurrentViales]=useState(0);\n\n  useEffect(() => {\n    document.querySelector(\".result\").value = \"0\";\n  }, []);\n\n  useEffect(() => {\n    if (clear) document.querySelector(\".result\").value = \"0\";\n  });\n  const Formula = (e) => {\n    e.preventDefault();\n    if (clear) setClear(false);\n    var currentAltura = document.querySelector(\"#altura\").value;\n    var currentPeso = document.querySelector(\"#peso\").value;\n    const decimal = 0.7184;\n    let alturaParcial = Math.pow(currentAltura, 0.725);\n    let pesoParcial = Math.pow(currentPeso, 0.425);\n    \n    let superficie = Math.round(alturaParcial * pesoParcial * decimal) / 100;\n    setCurrentBsa(superficie);\n    console.log(superficie)\n\n   var dosis =parseFloat(superficie*1.4);\n   setCurrentDosis(dosis.toFixed(2))\n\n   console.log(dosis.toFixed(2));\n   let viales = (dosis*2/1);\n   setCurrentViales(viales)\n\n  };\n  console.log(currentPeso);\n  console.log(currentAltura);\n \n  const Clear = (e) => {\n    e.preventDefault();\n    document.querySelector(\"form\").reset();\n    setClear(true);\n    setCurrentAltura(0);\n    setCurrentPeso(0);\n    setCurrentDosis(0)\n    setCurrentViales(0)\n  };\n  return (\n    <div className=\"calculadora\">\n      <br/>\n      <form>\n        <div className=\"grupo-form\">\n          <label > Altura: </label>\n          <input type=\"text\" id=\"altura\" placeholder=\"Ingresa la altura\" />\n        </div>\n        <br />\n        <div className=\"grupo-form\">\n          <label > Peso: </label>\n          <input type=\"text\" id=\"peso\" placeholder=\"Ingresa el peso\" />\n        </div>\n        <hr />\n\n        <button onClick={Formula}>Calcular</button>\n\n        <button onClick={Clear}>Limpiar</button>\n\n        <hr />\n        <label> BSA (Superficie Corporal): </label>\n        <input type=\"text\" className=\"result\" value={currentBsa} readOnly />\n        <br/>\n        <label>Dosis </label>\n        <input type=\"text\" className=\"result\" value={currentDosis} readOnly />\n        <br/>\n        <label>Viales </label>\n        <input type=\"text\" className=\"result\" value={currentViales} readOnly />\n      </form>\n    </div>\n  )\n}\n\nexport default Calculadora\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Calculadora from './components/Calculadora'\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Calculadora/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}